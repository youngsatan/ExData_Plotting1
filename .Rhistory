download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv","./dt.css")
install.packages("data.table")
library(data.table)
DT <- fread("dt.css")
head(DT)
q()
library(XML)
xpathSApply(rootNode,"//zipcode",xmlValue)
str(rootNode)
xpathSApply(rootNode,"//zipcode",xmlValue)
xpathSApply(rootNode,"//name",xmlValue)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
xpathSApply(rootNode,"/name",xmlValue)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx
","ngap.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx
","NGAP.xlsx")
library(xlsx)
dt <- read.xlsx("NGAP.xlsx")
dt <- read.xlsx("NGAP.xlsx",1)
q()
library(xlsx)
ngap <- read.xlsx("NGAP.xlsx",1)
View(ngap)
ngap <- read.xlsx("NGAP.xlsx",1,T)
View(ngap)
dat <- ngap[18:23,7,15]
View(dat)
dat <- ngap[18:23,7:15]
View(dat)
ngap <- read.xlsx("NGAP.xlsx",1,header = True)
ngap <- read.xlsx("NGAP.xlsx",sheetIndex = 1,header = TRUE)
View(dat)
View(ngap)
q()
library(swirl)
install_from_swirl("Getting and Cleaning Data")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirt()
swirl()
read.csv(path2csv,stringsAsFactors = F)
read.csv(path2csv,stringsAsFactors = F) -> mydf
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
rootNode
0
q
info()
bye()
library(swirl)
swirl()
swirl()
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
play()
nxt()
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran,-(X:size))
filter(cran, package == "swirl")
filter(cran,r_r_version ==
| "3.1.1", country == "US")
filter(cran,r_r_version == "3.1.1", country == "US")
filter(cran,r_version == "3.1.1", country == "US")
?Comparison
filter(cran,country =="IN",r_version <="3.0.2")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500 & r_os == "linux-gnu")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(size:ip_id)
cran2 <- select(cran,size:ip_id)
arange(cran2,ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_gb = size_mb/2^10)
mutate(cran3,size_mb = size/2^20,size_gb = size_mb/2^10)
mutate(cran3,correct_size = size-1000)
mutate(cran3,correct_size = size+1000)
summarize(cran,avg_bytes = mean(size))
rm(list=ls())
library(swirl)
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package<- group_by(cran,package)
by_package
?sumarize
?summarise
summarize(cran,mean(size))
summarize(by_package,mean(size))
?n
?n_distinct
submit()
tbl
pack_sum
quantile(pack_sum$cout,probs = .99)
quantile(pack_sum$cout,probs = 0.99)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
head(top_counts,20)
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum,unique > 465)
top_unique
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
q
q()
?complete
source("corr.R")
cr<- corr("specdata",5000)
source("complete.R")
cr<- corr("specdata",5000)
cr
summary(cr)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv",fdata.csv)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv","fdata.csv")
gd <- read.csv("GettingData")
head(gd)
names(gd)
gd[,gd$VAL==24]
gd[gd$VAL==24,]
nrow(gd[gd$VAL==24,])
nrow(gd[gd$VAL==24&is.na(gd$VAL),])
nrow(gd[gd$VAL==24&!is.na(gd$VAL),])
library(xlsx)
dat
dat <- read.xlsx("NGAP.xlsx",sheetIndex = 1,colIndex = 7:15,rowIndex = 18:23 )
sum(dat$Zip*dat$Ext,na.rm=T)
library(xml)
library(XML)
doc <- xmlTreeParse("baltimore.xml")
rootNode2 <- xmlRoot(doc)
xmlName(rootNode2)
xpathSApply(rootNode2,"//name",xmlValue)
zipcode <- xpathSApply(rootNode2,"//name",xmlValue)
zipcode <- xpathSApply(rootNode2,"//zipcode",xmlValue)
sum(zipcode[zipcode=' 21231'])
rootNode2
rootNode2[1]
rootNode2[1][1]
rootNode2[1][1][1]
rootNode2[1][1][1][1]
rootNode2[[1]]
rootNode2[[[1]]
rootNode2[[1]]
xmlName(rootNode2)
names(rootNode2)
rootNode2[[1]][[1]]
rootNode2[[1]][[1]][[1]]
rootNode2[[1]][[1]][[2]]
xmlSApply(rootNode2,xmlValue)
xmlSApply(rootNode2,"//zipcode",xmlValue)
xpathSApply(rootNode2,"//zipcode",xmlValue)
xpathSApply(rootNode2,"//names",xmlValue)
rootNode2[[1]][[1]][[2]]
rootNode2[[1]][[1]][[1]]
rootNode2[[1]][[1]]
xpathSApply(rootNode2,"//row",xmlValue)
doc <- xmlTreeParse("baltimore.xml",useInternalNodes = T)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
rootNode[[1]][[1]]
xpathSApply(rootNode,"//name",xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
zipcode <- xpathSApply(rootNode,"//zipcode",xmlValue)
sum(zipcode[zipcode =="21231"])
zipcode
zipcode[zipcode =="21231"]
sum(zipcode[zipcode== "21231"])
sum(zipcode=='21231')
nrow(gd[gd$VAL==24&!is.na(gd$VAL),])
?rm
rm(list=ls())
library(swirl)
swirl()
mydf <-read.csv(path2csv,stringsAsFactor = F)
mydf <-read.csv(path2csv,stringsAsFactor = False)
mydf <-read.csv(path2csv,stringsAsFactor = FALSE)
skip()
dim(mydf)
head(mydf)
library(dplyr)
skip()
cran<- tbl_df(mydf)
rm("mydf")
?tbl_df
cran
?select
select(cran,ip_id,package,country)
select(cran,5:20)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
select(cran,country:r_arch)
cran
q()
rm(list=ls())
library(swirl)
swirl()
select(cran,-time)
-5:20
5:20
-(5:20)
select(cran,X:size)
select(cran,-(X:size))
q
q()
library(swirl)
swirl()
filter(cran,package == "swirl")
filter(cran,r_version == "3.1.1",country == "US")
?Comparison
filter(cran,r_version <= "3.0.2",country == "IN")
skip()
filter(cran,size > 100500, r_os =="linux-gnu")
skip()
skip()
filter(cran,!is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2, package, ip_id)
skip()
skip()
cran3
mutate(cran3,size_mb = size/2^20)
mutate(cran3,size_mb = size/2^20,size_gb = size_mb/2^10)
mutate(cran3,correct_size = size+1000)
summarise(cran,avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarise(by_package,mean(size))
summarize(by_package,mean(size))
submit()
pack_sum
quantile(pack_sum$count,probs = 0.99)
top_count <- filter(pack_sum,count > 679)
top_counts <- filter(pack_sum,count > 679)
top_counts
skip()
arrange(top_counts,desc(counts))
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
filter(pack_sum,unique>456)
filter(pack_sum, unique > 456)
filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(pack_sum,desc(unique))
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip","exdata1.zip")
dir
?readLines
?readline
?readLines
?file
?read
?read.delim
read.delim("D:/R/exdata1/household_power_consumption.txt")
mydata <-read.delim("D:/R/exdata1/household_power_consumption.txt")
head(mydata)
View(mydata)
mydata <-read.delim("D:/R/exdata1/household_power_consumption.txt",sep = ";")
head(mydata)
mydata <-read.delim("D:/R/exdata1/household_power_consumption.txt",sep = ";",na.strings = "?")
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
mydata2007 <- mydata[mydata$Date=="1/2/2007" |mydata$Date=="2/2/2007" ,]
mydata2007$Datetime <- strptime(paste(mydata2007$Date,mydata2007$Time),format = "%Y-%m-%d%H:%M:%S")
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",ylab = "Globe Active Power(kilowatts)")
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l")
plot(mydata2007$Datetime,mydata2007$Global_active_power)
plot(x = mydata2007$Datetime,y = mydata2007$Global_active_power)
?plot
View(mydata2007)
mydata2007$Datetime <- strptime(paste(mydata2007$Date,mydata2007$Time),format = "%Y-%m-%d%H:%M:%S")
View(mydata2007)
mydata <-read.delim("D:/R/exdata1/household_power_consumption.txt",sep = ";",na.strings = "?")
mydata2007$Datetime <- strptime(paste(mydata2007$Date,mydata2007$Time),format = "%Y-%m-%d%H:%M:%S")
View(mydata2007)
View(mydata2007)
mydata2007$Datetime <- strptime(paste(mydata2007$Date,mydata2007$Time),format = "%d-%m-%Y%H:%M:%S")
View(mydata2007)
mydata2007$Datetime <- strptime(paste(mydata2007$Date,mydata2007$Time),format = "%d/%m/%Y%H:%M:%S")
View(mydata2007)
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
getwd()
setwd("D:/R/ExData_Plotting1")
setwd(~)
setwd(/~)
setwd(..)
setwd("..")
with(mydata2007,{
plot(Datetime,sub_metering_1,type = "l")
})
View(mydata2007)
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l")
})
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "")
})
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "")
plot(Datetime,Sub_metering_2,type = "l",xlab = "",ylab = "",col = "blue")
plot(Datetime,Sub_metering_3,type = "l",xlab = "",ylab = "",col = "red")
})
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "")
plot(Datetime,Sub_metering_2,type = "l",xlab = "",ylab = "",col = "blue",add = T)
plot(Datetime,Sub_metering_3,type = "l",xlab = "",ylab = "",col = "red",add = T)
})
warnings()
lines(mydata2007$Datetime,mydata2007$Sub_metering_1)
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "blue")
lines(Datetime,Sub_metering_3,col = "red")
})
legend("topright",type = "l")
legend("topright",lwd = 1,col = c("black","blue","red"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
setwd("D:/R/ExData_Plotting1")
par(mfrow = (2,2))
ylim = c(0,1200))
par(mfrow = c(2,2))
hist(mydata2007$Global_active_power,
col = "red",
main = "Globe Active Power",
xlab = "Globe Active Power(kilowatts)",
ylim = c(0,1200))
par(mfrow = c(2,2))
plot(mydata2007$Datetime,mydata2007$Global_active_power,
type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
)
plot(mydata2007$Datetime,mydata2007$Global_active_power,
type = "l",xlab = "",ylab = "Globe Active Power")
par(mfrow = c(2,2))
plot(mydata2007$Datetime,mydata2007$Global_active_power,
type = "l",xlab = "",ylab = "Globe Active Power")
plot(mydata2007$Datetime,mydata2007$Voltage,
type = "l",xlab = "",ylab = "Voltage")
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "blue")
lines(Datetime,Sub_metering_3,col = "red")
})
legend("topright",lwd = 1,col = c("black","blue","red"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
type = "l",xlab = "",ylab = "Global reactive power")
plot(mydata2007$Datetime,mydata2007$Global_reactive_power,
type = "l",xlab = "",ylab = "Global reactive power")
dev.off()
source("plot4")
source("plot4.R")
source("plot4.R")
png("plot4.png",480,480)
par(mfrow = c(2,2))
plot(mydata2007$Datetime,mydata2007$Global_active_power,
type = "l",xlab = "",ylab = "Globe Active Power")
plot(mydata2007$Datetime,mydata2007$Voltage,
type = "l",xlab = "",ylab = "Voltage")
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "blue")
lines(Datetime,Sub_metering_3,col = "red")
})
legend("topright",lwd = 1,col = c("black","blue","red"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
plot(mydata2007$Datetime,mydata2007$Voltage,
type = "l",xlab = "",ylab = "Voltage")
plot(mydata2007$Datetime,mydata2007$Global_reactive_power,
type = "l",xlab = "",ylab = "Global reactive power")
dev.off()
png("plot4.png",480,480)
par(mfrow = c(2,2))
plot(mydata2007$Datetime,mydata2007$Global_active_power,
type = "l",xlab = "",ylab = "Globe Active Power")
plot(mydata2007$Datetime,mydata2007$Voltage,
type = "l",xlab = "",ylab = "Voltage")
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "blue")
lines(Datetime,Sub_metering_3,col = "red")
})
legend("topright",lwd = 1,col = c("black","blue","red"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
plot(mydata2007$Datetime,mydata2007$Global_reactive_power,
type = "l",xlab = "",ylab = "Global reactive power")
dev.off()
setwd("D:/R/ExData_Plotting1")
mydata <-read.delim("D:/R/exdata1/household_power_consumption.txt",sep = ";",na.strings = "?")
png("plot3.png",480,480)
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "red")
lines(Datetime,Sub_metering_3,col = "blue")
})
legend("topright",lwd = 1,col = c("black","red","blue"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
dev.off()
setwd("..")
png("plot2.png",480,480)
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
dev.off()
setwd("..")
setwd("D:/R/ExData_Plotting1")
png("plot2.png",480,480)
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
dev.off()
png("plot1.png",480,480)
hist(mydata2007$Global_active_power,
col = "red",
main = "Globe Active Power",
xlab = "Globe Active Power(kilowatts)",
ylim = c(0,1200))
dev.off()
setwd("..")
library(swirl)
install_from_swirl("Statistical Inference")
Sys.setlocale("LC_TIME", "English")
png("plot1.png",480,480)
hist(mydata2007$Global_active_power,
col = "red",
main = "Globe Active Power",
xlab = "Globe Active Power(kilowatts)",
ylim = c(0,1200))
dev.off()
png("plot2.png",480,480)
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
dev.off()
png("plot2.png",480,480)
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
dev.off()
Sys.setlocale("LC_TIME", "English")
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
setwd("D:/R/ExData_Plotting1")
png("plot2.png",480,480)
plot(mydata2007$Datetime,mydata2007$Global_active_power,type = "l",xlab = "",ylab = "Globe Active Power(kilowatts)")
dev.off()
png("plot3.png",480,480)
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "red")
lines(Datetime,Sub_metering_3,col = "blue")
})
legend("topright",lwd = 1,col = c("black","red","blue"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
dev.off()
png("plot4.png",480,480)
par(mfrow = c(2,2))
plot(mydata2007$Datetime,mydata2007$Global_active_power,
type = "l",xlab = "",ylab = "Globe Active Power")
plot(mydata2007$Datetime,mydata2007$Voltage,
type = "l",xlab = "",ylab = "Voltage")
with(mydata2007,{
plot(Datetime,Sub_metering_1,type = "l",xlab = "",ylab = "Energy sub metering")
lines(Datetime,Sub_metering_2,col = "blue")
lines(Datetime,Sub_metering_3,col = "red")
})
legend("topright",lwd = 1,col = c("black","blue","red"), legend = c( "sub_metering1", "sub_metering2","sub_metering3"))
plot(mydata2007$Datetime,mydata2007$Global_reactive_power,
type = "l",xlab = "",ylab = "Global reactive power")
dev.off()
